<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.apache.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.witcream.blog.serv.content.mapper.ContentMapper">

	<resultMap type="com.witcream.blog.api.bean.BlogContent" id="contentBean">
		<id column="blog_id" property="blogId" />
		<result column="blog_catagory" property="blogCategory" />
		<result column="blog_title" property="blogTitle" />
		<result column="blog_summary" property="blogSummary" />
		<result column="blog_content" property="blogContent" />
		<result column="main_pic_path" property="mainPicPath" />
		<result column="content_pics_path" property="contentPicsPath" />
		<result column="author" property="author" />
		<result column="read_count" property="readCount" />
		<result column="like_count" property="likeCount" />
		<result column="comment_count" property="commentCount" />
		<result column="keywords" property="keywords" />
		<result column="blog_detail_url" property="blogDetailUrl" />
		<result column="creator" property="creator" />
		<result column="create_dt" property="createDt" />
		<result column="operator" property="operator" />
		<result column="operate_dt" property="operateDt" />
		<result column="comment" property="comment" />
		<collection property="tagsSet" javaType="java.util.HashSet" ofType="BlogTag">
			<id column="tag_id" property="tagId" />
			<result column="blog_id" property="blogId" />
			<result column="tag_name" property="tagName" />
			<result column="creator" property="creator" />
			<result column="create_dt" property="createDt" />
		</collection>
	</resultMap>

	<select id="queryBlogContents" resultMap="contentBean">
		<include refid="QUERY_BLOGS" />
		ORDER BY create_dt DESC
		<if test="pageModel!=null">
			LIMIT #{pageModel.startRow}, #{pageModel.pageSize}
		</if>
	</select>

	<sql id="QUERY_BLOGS">
		SELECT A.blog_id, A.blog_catagory, A.blog_title, A.blog_summary,
		A.blog_content, A.main_pic_path,A.content_pics_path,
		A.author ,A.read_count,A.like_count,A.comment_count,A.keywords
		,A.blog_detail_url ,A.creator, A.create_dt,A.operator,
		A.operate_dt,A.comment,B.tag_id ,B.blog_id ,B.tag_name ,B.creator
		,B.create_dt
		FROM blog_content A LEFT JOIN blog_tag B ON (A.blog_id =
		B.blog_id)
		<where>
			<if test="paramMap!=null">
				<if test="paramMap.blogCatagory != null and paramMap.blogCatagory != ''">
					AND A.blog_catagory = #{paramMap.blogCatagory}
				</if>
				<if test="paramMap.blogTitle != null and paramMap.blogTitle != ''">
					AND A.blog_title = #{paramMap.blogTitle}
				</if>
				<if test="paramMap.tagName != null and paramMap.tagName != ''">
					AND B.tag_name = #{paramMap.tagName}
				</if>
			</if>
		</where>
		<if test="paramMap.orderBy!=null and paramMap.orderBy != ''">
			LIMIT #{paramMap.orderBy}, #{paramMap.sort}
		</if>
		<if
			test="paramMap.startRow!=null and paramMap.startRow != '' and paramMap.pageSize!=null and paramMap.pageSize != ''">
			LIMIT #{paramMap.startRow}, #{paramMap.pageSize}
		</if>
	</sql>

	<select id="queryBlogsByIds" resultMap="contentBean">
		select * from blog_content A left join blog_tag B ON A.blog_id =
		B.blog_id where A.blog_id in
		<foreach collection="blogIds" open="(" separator="," close=")"
			item="blog_id">
			#{blog_id}
		</foreach>
	</select>


</mapper>